<html>

<head>
<title>Title</title>
</head>

<body>

<p>This is an R HTML document. When you click the <b>Knit HTML</b> button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</p>

<!--begin.rcode
```{r, echo=TRUE}
## download the file
library("plyr")
library("knitr")
library("reshape2")
library("ggplot2")
library("rmarkdown")
library("lattice")

  fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
  download.file(url = fileUrl,destfile = "./DataScience.zip",method = "curl")
##unzip the file
  unzip(zipfile = "./DataScience.zip",exdir = "./data")

total_data = read.table(file ="./data/activity.csv",header=T, quote="\"", sep=",")
data$date <- as.Date(data$date)
data <- total_data[with (total_data, { !(is.na(steps)) } ), ]
head(data)
### What is the mean total number of steps taken per day?
## 1. Make a histogram of the total number of steps taken each day
steps.per.day <- aggregate(steps ~ date, data=data, FUN=sum)
hist(steps.per.day$steps, main="Histogram of total number of steps per day", 
     xlab="Total number of steps in a day")

## 2. Calculate and report the mean and median total number of steps taken per day
MeanWithNA<-mean(steps.per.day$steps)
MeanWithNA
MedianWithNA<-median(steps.per.day$steps)
MedianWithNA

###What is the average daily datos pattern?
##1.Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
steps.per.interval <- aggregate(steps ~ interval, data=data, FUN=mean)
plot(steps.per.interval$interval, steps.per.interval$steps, type='l', 
     main="Average number of steps over all days", xlab="Interval", ylab="Average number of steps")
## 2.Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
steps.per.interval$interval[which.max(steps.per.interval$steps)]

##Imputing missing values
##Note that there are a number of days/intervals where there are missing values (coded as ????????). The presence of missing days may ##introduce bias into some calculations or summaries of the data.

##1.Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)
sum(is.na(total_data))
##2.Devise a strategy for filling in all of the missing values in the dataset. The strategy does not need to be sophisticated. For ##example, you could use the mean/median for that day, or the mean for that 5-minute interval, etc.
##Used the means for that 5-minute intervals

##3.Create a new dataset that is equal to the original dataset but with the missing data filled in.

data2 <- total_data
for (i in 1:nrow(data2)) {
  if (is.na(data2$steps[i])) {
    interval_value <- data2$interval[i]
    steps_value <- steps.per.interval[
      steps.per.interval$interval == interval_value,]
    data2$steps[i] <- steps_value$steps
  }
}

#4.Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?
steps.per.day2 <- aggregate(steps ~ date, data2, sum)
hist(steps.per.day2$steps, main="Histogram of total number of steps per day", 
     xlab="Total number of steps in a day")
MeanWithoutNA<-mean(steps.per.day2$steps)
MeanWithoutNA
MeanWithNA
MedianWithoutNA<-median(steps.per.day2$steps)
MedianWithoutNA
MedianWithNA

##The impact of the missing data seems low

##Are there differences in datos patterns between weekdays and weekends?

##1.Create a new factor variable in the dataset with two levels -- "weekday" and "weekend" indicating whether a given date is a ##weekday or weekend day.

day <- weekdays(as.Date(data2$date))
daylevel <- vector()
for (i in 1:nrow(data2)) {
    if (day[i] == "Saturday") {
        daylevel[i] <- "Weekend"
    } else if (day[i] == "Sunday") {
        daylevel[i] <- "Weekend"
    } else {
        daylevel[i] <- "Weekday"
    }
}
data2$daylevel <- daylevel
data2$daylevel <- factor(data2$daylevel)

##2.Make a panel plot containing a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of ##steps taken, averaged across all weekday days or weekend days (y-axis).

steps.per.day3 <- aggregate(steps ~ interval + daylevel, data = data2, mean)
head(steps.per.day3)
names(steps.per.day3) <- c("interval", "week", "steps")
xyplot(steps ~ interval | week, steps.per.day3, type = "l", layout = c(1, 2), 
    xlab = "Interval", ylab = "Number of steps")

## The plots show that there are differences in datos patterns between weekdays and weekends
end.rcode-->

<p>You can also embed plots, for example:</p>

<!--begin.rcode fig.width=7, fig.height=6
hist(steps.per.day$steps, main="Histogram of total number of steps per day", 
     xlab="Total number of steps in a day")
plot(steps.per.interval$interval, steps.per.interval$steps, type='l', 
     main="Average number of steps over all days", xlab="Interval", ylab="Average number of steps")
hist(steps.per.day2$steps, main="Histogram of total number of steps per day", 
     xlab="Total number of steps in a day")
xyplot(steps ~ interval | week, steps.per.day3, type = "l", layout = c(1, 2), 
    xlab = "Interval", ylab = "Number of steps")
end.rcode-->

</body>
</html>
